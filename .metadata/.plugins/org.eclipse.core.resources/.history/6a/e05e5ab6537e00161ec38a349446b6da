package todo;

import done.ClockInput;
import se.lth.cs.realtime.semaphore.Semaphore;

public class BThread extends Thread {

	private ClockInput input;
	private Semaphore inputSemaphore;
	private Manager man;
	private int setTime = -1;
	private int oldChoice;
	private int choice;

	public BThread(ClockInput i, Manager m) {
		input = i;
		inputSemaphore = input.getSemaphoreInstance();
		man = m;
		
	}

	@Override
	public void run() {
		
		while (man.isAlive()) {
			inputSemaphore.take();
			choice = input.getChoice();
			switch (oldChoice) {
			case ClockInput.SET_TIME:
				setTime = input.getValue();
				System.out.println(input.getValue());
				oldChoice = ClockInput.SET_TIME;
				break;
			case ClockInput.SET_ALARM:
				setTime = input.getValue();
				oldChoice = ClockInput.SET_ALARM;
				break;
			case ClockInput.SHOW_TIME:
				if ((choice == ClockInput.SET_TIME )) {
					man.setTime(setTime);
				}
				if(choice == ClockInput.SET_ALARM){
					man.setAlarm(setTime);
				}
				oldChoice=ClockInput.SHOW_TIME;
				man.disableAlarm();
				break;
			}
			oldChoice = choice;
		}
	}
}
