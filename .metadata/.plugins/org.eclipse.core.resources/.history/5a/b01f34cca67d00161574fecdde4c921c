package todo;

import se.lth.cs.realtime.RTInterrupted;
import se.lth.cs.realtime.semaphore.Semaphore;

public class TThread extends Thread {

	private long waitTime;
	private static Manager man;

	public TThread(Manager man) {
		this.man = man;
		waitTime = System.currentTimeMillis();
	}

	public void run() {
	        long diff;

	        while (man.isAlive()) {
	        	diff = waitTime - System.currentTimeMillis();
	            while (diff > 0) {
	                try {
	                    Thread.sleep(diff);
	                } catch (InterruptedException e) {
	                    throw new RTInterrupted(e.toString());
	                }
	            }

	            waitTime += 1000 + diff;
	            man.tick();
	        }
	    }

}
